{
  "title": "Intro to solana",
  "author": "shivam",
  "moduleNumber": "module-1",
  "modulePart": "module-1-a",
  "thisFileName": "solidity-for-solvseth\r",
  "body": {
<<<<<<< HEAD
    "raw": "\r\n# Solidity For Solana vs. Solidity For Ethereum\r\n\r\n# Objectives\r\n\r\nIn this lesson, you will able to:\r\n\r\n- Explain the adjustments for Solidity on Solana.\r\n- Understand the technical differences between Ethereum and Solana.\r\n\r\n# tl;dr\r\n\r\nIn this lesson, we take a brief look at the differences in the development environments of Solana and Ethereum. In Solidity contracts on Solana, there are two accounts: a program account for the executable code and a data account for storage variables, different from Ethereum's single-account approach where one account handles both code and data.\r\n\r\n# Overview\r\n\r\n## Adapting Solidity for Solana's Unique Environment\r\n\r\n**When integrating Solidity's mechanics into the Solana environment, certain adjustments are necessary**. Within a Solidity contract on Solana, a distinct structure emerges, comprising two separate accounts: a data account and a program account. The program account stores the contract's executable binary and controls the data account, which encompasses all storage variables. This contrasts with Ethereum's approach, where a single account manages both executable code and data.\r\n\r\nSimplifying Technical Concepts in Solana and Ethereum\r\n\r\n- In Solana, an account is represented by a 32-byte key, denoted as the **`address`** type, which differs from Ethereum's 20-byte address format. An address is represented using syntax like **`36VtvSbE6jVGGQytYWSaDPG7uZphaxEjpJHUUpuUbq4D`**.\r\n- It's important to note that Ethereum's address format **`0xE0f5206BBD039e7b0592d8918820024e2a7437b9`** isn't compatible with Solana.\r\n- Ethereum's wallet addresses generally have 40 characters, including the 0x prefix. , Solana wallet addresses can be around 44 characters in length, without a fixed prefix.\r\n- The use of Solana's target requires **[Solana](https://www.solana.com/)** version v1.8.1.\r\n- In Ethereum, setting the gas limit while invoking a smart contract function influences resource consumption. Gas encompasses the on-chain execution expenses and permits the prioritization of execution through the allocation of extra gas. Each instruction within the Ethereum Virtual Machine (EVM) carries a unique gas value, which corresponds to real ETH costs.\r\n- In Solana, the focus is on reducing delays and increasing transaction processing speed. To achieve this, Solana uses compute units similar to Ethereum's gas. Each smart contract function in Solana is allocated the same number of compute units (currently 200k), and every instruction of a contract consumes exactly one compute unit. Unlike Ethereum, Solana transactions do not require the specification of compute units and are not charged for their usage. However, the charges for execution priority are based on the consumed compute units. Therefore, the concepts of gas in Ethereum do not apply to Solidity on Solana.\r\n- The **`msg.sender`** function isn't available in Solana.\r\n- Due to different signature algorithms, Solana lacks the **`ecrecover()`** function. Yet, **`signatureVerify()`** verifies ed25519 signatures. Extracting a signer from a signature isn't workable.\r\n- On Solana, try-catch statements lack functionality. If a call or contract creation fails, the runtime stops execution and reverts the transaction.\r\n- Error definitions, reverts, and error messages don't work in Solana.\r\n- The ERC-20 interface isn't currently compatible with Solana.\r\n\r\nHere's a simplified comparison table between Solana and Ethereum various technical incompatibilities:\r\n\r\n| Concept | Solana | Ethereum |\r\n| --- | --- | --- |\r\n| Account Address Format | 32-byte key (address type) | 20-byte address |\r\n| Wallet Address Length | Varies (around 44 characters) | 40 characters (with 0x prefix) |\r\n| Required Solana Version | v1.8.1 | - |\r\n| Gas and Resource Management | Compute Units (similar to gas) | Gas and EVM instructions |\r\n| Compute Unit Allocation | 200k per function | Varies per instruction |\r\n| msg.sender Function | Not Available | Available |\r\n| Signature Verification | signatureVerify() | ecrecover() |\r\n| Try-Catch Statements | Not Functional | Available |\r\n| Error Handling and Reverts | Limited | Available |\r\n| ERC-20 Compatibility | Not Compatible | Compatible |\r\n\r\nIn the next lesson, we provide an in-depth technical comparison between Solana and Ethereum, especially with regards to their architectures and their use of Solidity.",
    "code": "var Component=(()=>{var lr=Object.create;var j=Object.defineProperty;var ur=Object.getOwnPropertyDescriptor;var cr=Object.getOwnPropertyNames;var dr=Object.getPrototypeOf,fr=Object.prototype.hasOwnProperty;var B=(c,a)=>()=>(a||c((a={exports:{}}).exports,a),a.exports),mr=(c,a)=>{for(var p in a)j(c,p,{get:a[p],enumerable:!0})},ye=(c,a,p,S)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let g of cr(a))!fr.call(c,g)&&g!==p&&j(c,g,{get:()=>a[g],enumerable:!(S=ur(a,g))||S.enumerable});return c};var br=(c,a,p)=>(p=c!=null?lr(dr(c)):{},ye(a||!c||!c.__esModule?j(p,\"default\",{value:c,enumerable:!0}):p,c)),hr=c=>ye(j({},\"__esModule\",{value:!0}),c);var Ne=B((yr,xe)=>{xe.exports=React});var Ee=B(H=>{\"use strict\";(function(){\"use strict\";var c=Ne(),a=Symbol.for(\"react.element\"),p=Symbol.for(\"react.portal\"),S=Symbol.for(\"react.fragment\"),g=Symbol.for(\"react.strict_mode\"),z=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),R=Symbol.for(\"react.forward_ref\"),A=Symbol.for(\"react.suspense\"),F=Symbol.for(\"react.suspense_list\"),D=Symbol.for(\"react.memo\"),I=Symbol.for(\"react.lazy\"),De=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,we=\"@@iterator\";function Te(e){if(e===null||typeof e!=\"object\")return null;var r=J&&e[J]||e[we];return typeof r==\"function\"?r:null}var x=c.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var r=arguments.length,n=new Array(r>1?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];Ue(\"error\",e,n)}}function Ue(e,r,n){{var o=x.ReactDebugCurrentFrame,l=o.getStackAddendum();l!==\"\"&&(r+=\"%s\",n=n.concat([l]));var u=n.map(function(s){return String(s)});u.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,u)}}var Oe=!1,Pe=!1,je=!1,Ae=!1,Fe=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ie(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===S||e===z||Fe||e===g||e===A||e===F||Ae||e===De||Oe||Pe||je||typeof e==\"object\"&&e!==null&&(e.$$typeof===I||e.$$typeof===D||e.$$typeof===X||e.$$typeof===K||e.$$typeof===R||e.$$typeof===Z||e.getModuleId!==void 0))}function Ve(e,r,n){var o=e.displayName;if(o)return o;var l=r.displayName||r.name||\"\";return l!==\"\"?n+\"(\"+l+\")\":n}function Q(e){return e.displayName||\"Context\"}function v(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case S:return\"Fragment\";case p:return\"Portal\";case z:return\"Profiler\";case g:return\"StrictMode\";case A:return\"Suspense\";case F:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var r=e;return Q(r)+\".Consumer\";case X:var n=e;return Q(n._context)+\".Provider\";case R:return Ve(e,e.render,\"ForwardRef\");case D:var o=e.displayName||null;return o!==null?o:v(e.type)||\"Memo\";case I:{var l=e,u=l._payload,s=l._init;try{return v(s(u))}catch{return null}}}return null}var y=Object.assign,C=0,ee,re,ne,ae,te,oe,ie;function se(){}se.__reactDisabledLog=!0;function We(){{if(C===0){ee=console.log,re=console.info,ne=console.warn,ae=console.error,te=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}C++}}function Ye(){{if(C--,C===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:y({},e,{value:ee}),info:y({},e,{value:re}),warn:y({},e,{value:ne}),error:y({},e,{value:ae}),group:y({},e,{value:te}),groupCollapsed:y({},e,{value:oe}),groupEnd:y({},e,{value:ie})})}C<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var V=x.ReactCurrentDispatcher,W;function w(e,r,n){{if(W===void 0)try{throw Error()}catch(l){var o=l.stack.trim().match(/\\n( *(at )?)/);W=o&&o[1]||\"\"}return`\n`+W+e}}var Y=!1,T;{var Me=typeof WeakMap==\"function\"?WeakMap:Map;T=new Me}function le(e,r){if(!e||Y)return\"\";{var n=T.get(e);if(n!==void 0)return n}var o;Y=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var u;u=V.current,V.current=null,We();try{if(r){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(_){o=_}Reflect.construct(e,[],s)}else{try{s.call()}catch(_){o=_}e.call(s.prototype)}}else{try{throw Error()}catch(_){o=_}e()}}catch(_){if(_&&o&&typeof _.stack==\"string\"){for(var i=_.stack.split(`\n`),b=o.stack.split(`\n`),d=i.length-1,f=b.length-1;d>=1&&f>=0&&i[d]!==b[f];)f--;for(;d>=1&&f>=0;d--,f--)if(i[d]!==b[f]){if(d!==1||f!==1)do if(d--,f--,f<0||i[d]!==b[f]){var h=`\n`+i[d].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&T.set(e,h),h}while(d>=1&&f>=0);break}}}finally{Y=!1,V.current=u,Ye(),Error.prepareStackTrace=l}var E=e?e.displayName||e.name:\"\",Se=E?w(E):\"\";return typeof e==\"function\"&&T.set(e,Se),Se}function $e(e,r,n){return le(e,!1)}function Le(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function U(e,r,n){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Le(e));if(typeof e==\"string\")return w(e);switch(e){case A:return w(\"Suspense\");case F:return w(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case R:return $e(e.render);case D:return U(e.type,r,n);case I:{var o=e,l=o._payload,u=o._init;try{return U(u(l),r,n)}catch{}}}return\"\"}var O=Object.prototype.hasOwnProperty,ue={},ce=x.ReactDebugCurrentFrame;function P(e){if(e){var r=e._owner,n=U(e.type,e._source,r?r.type:null);ce.setExtraStackFrame(n)}else ce.setExtraStackFrame(null)}function Ge(e,r,n,o,l){{var u=Function.call.bind(O);for(var s in e)if(u(e,s)){var i=void 0;try{if(typeof e[s]!=\"function\"){var b=Error((o||\"React class\")+\": \"+n+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw b.name=\"Invariant Violation\",b}i=e[s](r,s,o,n,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(d){i=d}i&&!(i instanceof Error)&&(P(l),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",o||\"React class\",n,s,typeof i),P(null)),i instanceof Error&&!(i.message in ue)&&(ue[i.message]=!0,P(l),m(\"Failed %s type: %s\",n,i.message),P(null))}}}var qe=Array.isArray;function M(e){return qe(e)}function Be(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,n=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return n}}function He(e){try{return de(e),!1}catch{return!0}}function de(e){return\"\"+e}function fe(e){if(He(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Be(e)),de(e)}var k=x.ReactCurrentOwner,ze={key:!0,ref:!0,__self:!0,__source:!0},me,be,$;$={};function Xe(e){if(O.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(O.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Je(e,r){if(typeof e.ref==\"string\"&&k.current&&r&&k.current.stateNode!==r){var n=v(k.current.type);$[n]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',v(k.current.type),e.ref),$[n]=!0)}}function Ze(e,r){{var n=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};n.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:n,configurable:!0})}}function Qe(e,r){{var n=function(){be||(be=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};n.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:n,configurable:!0})}}var er=function(e,r,n,o,l,u,s){var i={$$typeof:a,type:e,key:r,ref:n,props:s,_owner:u};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:o}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:l}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function rr(e,r,n,o,l){{var u,s={},i=null,b=null;n!==void 0&&(fe(n),i=\"\"+n),Ke(r)&&(fe(r.key),i=\"\"+r.key),Xe(r)&&(b=r.ref,Je(r,l));for(u in r)O.call(r,u)&&!ze.hasOwnProperty(u)&&(s[u]=r[u]);if(e&&e.defaultProps){var d=e.defaultProps;for(u in d)s[u]===void 0&&(s[u]=d[u])}if(i||b){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&Ze(s,f),b&&Qe(s,f)}return er(e,i,b,l,o,k.current,s)}}var L=x.ReactCurrentOwner,he=x.ReactDebugCurrentFrame;function N(e){if(e){var r=e._owner,n=U(e.type,e._source,r?r.type:null);he.setExtraStackFrame(n)}else he.setExtraStackFrame(null)}var G;G=!1;function q(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===a}function pe(){{if(L.current){var e=v(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function nr(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),n=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+n+\".\"}return\"\"}}var ve={};function ar(e){{var r=pe();if(!r){var n=typeof e==\"string\"?e:e.displayName||e.name;n&&(r=`\n\nCheck the top-level render call using <`+n+\">.\")}return r}}function _e(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var n=ar(r);if(ve[n])return;ve[n]=!0;var o=\"\";e&&e._owner&&e._owner!==L.current&&(o=\" It was passed a child from \"+v(e._owner.type)+\".\"),N(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',n,o),N(null)}}function ge(e,r){{if(typeof e!=\"object\")return;if(M(e))for(var n=0;n<e.length;n++){var o=e[n];q(o)&&_e(o,r)}else if(q(e))e._store&&(e._store.validated=!0);else if(e){var l=Te(e);if(typeof l==\"function\"&&l!==e.entries)for(var u=l.call(e),s;!(s=u.next()).done;)q(s.value)&&_e(s.value,r)}}}function tr(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var n;if(typeof r==\"function\")n=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===R||r.$$typeof===D))n=r.propTypes;else return;if(n){var o=v(r);Ge(n,e.props,\"prop\",o,e)}else if(r.PropTypes!==void 0&&!G){G=!0;var l=v(r);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",l||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function or(e){{for(var r=Object.keys(e.props),n=0;n<r.length;n++){var o=r[n];if(o!==\"children\"&&o!==\"key\"){N(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",o),N(null);break}}e.ref!==null&&(N(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),N(null))}}function ir(e,r,n,o,l,u){{var s=Ie(e);if(!s){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var b=nr(l);b?i+=b:i+=pe();var d;e===null?d=\"null\":M(e)?d=\"array\":e!==void 0&&e.$$typeof===a?(d=\"<\"+(v(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):d=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",d,i)}var f=rr(e,r,n,l,u);if(f==null)return f;if(s){var h=r.children;if(h!==void 0)if(o)if(M(h)){for(var E=0;E<h.length;E++)ge(h[E],e);Object.freeze&&Object.freeze(h)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(h,e)}return e===S?or(f):tr(f),f}}var sr=ir;H.Fragment=S,H.jsxDEV=sr})()});var ke=B((Nr,Ce)=>{\"use strict\";Ce.exports=Ee()});var gr={};mr(gr,{default:()=>_r,frontmatter:()=>pr});var t=br(ke()),pr={title:\"Intro to solana\",author:\"shivam\",moduleNumber:\"module-1\",modulePart:\"module-1-a\",thisFileName:\"solidity-for-solvseth\"};function Re(c){let a=Object.assign({h1:\"h1\",p:\"p\",ul:\"ul\",li:\"li\",h2:\"h2\",strong:\"strong\",code:\"code\",a:\"a\"},c.components);return(0,t.jsxDEV)(t.Fragment,{children:[(0,t.jsxDEV)(a.h1,{children:\"Solidity For Solana vs. Solidity For Ethereum\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:9,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h1,{children:\"Objectives\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"In this lesson, you will able to:\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.ul,{children:[`\n`,(0,t.jsxDEV)(a.li,{children:\"Explain the adjustments for Solidity on Solana.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"Understand the technical differences between Ethereum and Solana.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:16,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h1,{children:\"tl;dr\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:18,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"In this lesson, we take a brief look at the differences in the development environments of Solana and Ethereum. In Solidity contracts on Solana, there are two accounts: a program account for the executable code and a data account for storage variables, different from Ethereum's single-account approach where one account handles both code and data.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h1,{children:\"Overview\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:22,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h2,{children:\"Adapting Solidity for Solana's Unique Environment\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:24,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:[(0,t.jsxDEV)(a.strong,{children:\"When integrating Solidity's mechanics into the Solana environment, certain adjustments are necessary\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:26,columnNumber:1},this),\". Within a Solidity contract on Solana, a distinct structure emerges, comprising two separate accounts: a data account and a program account. The program account stores the contract's executable binary and controls the data account, which encompasses all storage variables. This contrasts with Ethereum's approach, where a single account manages both executable code and data.\"]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:26,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"Simplifying Technical Concepts in Solana and Ethereum\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:28,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.ul,{children:[`\n`,(0,t.jsxDEV)(a.li,{children:[\"In Solana, an account is represented by a 32-byte key, denoted as the\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"address\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:30,columnNumber:75},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:30,columnNumber:73},this),\"\\xA0type, which differs from Ethereum's 20-byte address format. An address is represented using syntax like\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"36VtvSbE6jVGGQytYWSaDPG7uZphaxEjpJHUUpuUbq4D\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:30,columnNumber:193},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:30,columnNumber:191},this),\".\"]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"It's important to note that Ethereum's address format\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"0xE0f5206BBD039e7b0592d8918820024e2a7437b9\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:31,columnNumber:59},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:31,columnNumber:57},this),\"\\xA0isn't compatible with Solana.\"]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"Ethereum's wallet addresses generally have 40 characters, including the 0x prefix. , Solana wallet addresses can be around 44 characters in length, without a fixed prefix.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:32,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"The use of Solana's target requires\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.a,{href:\"https://www.solana.com/\",children:\"Solana\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:33,columnNumber:41},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:33,columnNumber:39},this),\"\\xA0version v1.8.1.\"]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"In Ethereum, setting the gas limit while invoking a smart contract function influences resource consumption. Gas encompasses the on-chain execution expenses and permits the prioritization of execution through the allocation of extra gas. Each instruction within the Ethereum Virtual Machine (EVM) carries a unique gas value, which corresponds to real ETH costs.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:34,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"In Solana, the focus is on reducing delays and increasing transaction processing speed. To achieve this, Solana uses compute units similar to Ethereum's gas. Each smart contract function in Solana is allocated the same number of compute units (currently 200k), and every instruction of a contract consumes exactly one compute unit. Unlike Ethereum, Solana transactions do not require the specification of compute units and are not charged for their usage. However, the charges for execution priority are based on the consumed compute units. Therefore, the concepts of gas in Ethereum do not apply to Solidity on Solana.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"The\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"msg.sender\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:36,columnNumber:9},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:36,columnNumber:7},this),\"\\xA0function isn't available in Solana.\"]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:36,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"Due to different signature algorithms, Solana lacks the\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"ecrecover()\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:37,columnNumber:61},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:37,columnNumber:59},this),\"\\xA0function. Yet,\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"signatureVerify()\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:37,columnNumber:94},this)},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:37,columnNumber:92},this),\"\\xA0verifies ed25519 signatures. Extracting a signer from a signature isn't workable.\"]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"On Solana, try-catch statements lack functionality. If a call or contract creation fails, the runtime stops execution and reverts the transaction.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"Error definitions, reverts, and error messages don't work in Solana.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"The ERC-20 interface isn't currently compatible with Solana.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:40,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"Here's a simplified comparison table between Solana and Ethereum various technical incompatibilities:\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:42,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:`| Concept | Solana | Ethereum |\\r\n| --- | --- | --- |\\r\n| Account Address Format | 32-byte key (address type) | 20-byte address |\\r\n| Wallet Address Length | Varies (around 44 characters) | 40 characters (with 0x prefix) |\\r\n| Required Solana Version | v1.8.1 | - |\\r\n| Gas and Resource Management | Compute Units (similar to gas) | Gas and EVM instructions |\\r\n| Compute Unit Allocation | 200k per function | Varies per instruction |\\r\n| msg.sender\\xA0Function | Not Available | Available |\\r\n| Signature Verification | signatureVerify() | ecrecover() |\\r\n| Try-Catch Statements | Not Functional | Available |\\r\n| Error Handling and Reverts | Limited | Available |\\r\n| ERC-20 Compatibility | Not Compatible | Compatible |`},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"In the next lesson, we provide an in-depth technical comparison between Solana and Ethereum, especially with regards to their architectures and their use of Solidity.\"},void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:57,columnNumber:1},this)]},void 0,!0,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\",lineNumber:1,columnNumber:1},this)}function vr(c={}){let{wrapper:a}=c.components||{};return a?(0,t.jsxDEV)(a,Object.assign({},c,{children:(0,t.jsxDEV)(Re,c,void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\"},this)}),void 0,!1,{fileName:\"C:\\\\Users\\\\vansh\\\\Desktop\\\\sol\\\\Solang-Series\\\\modules\\\\module-1\\\\module-1-a\\\\_mdx_bundler_entry_point-78cdaaaf-abc3-46b4-b0cc-fa7885025433.mdx\"},this):Re(c)}var _r=vr;return hr(gr);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
=======
    "raw": "\n# Solidity For Solana vs. Solidity For Ethereum\n\n# Objectives\n\nIn this lesson, you will able to:\n\n- Explain the adjustments for Solidity on Solana.\n- Understand the technical differences between Ethereum and Solana.\n\n# tl;dr\n\nIn this lesson, we take a brief look at the differences in the development environments of Solana and Ethereum. In Solidity contracts on Solana, there are two accounts: a program account for the executable code and a data account for storage variables, different from Ethereum's single-account approach where one account handles both code and data.\n\n# Overview\n\n## Adapting Solidity for Solana's Unique Environment\n\n**When integrating Solidity's mechanics into the Solana environment, certain adjustments are necessary**. Within a Solidity contract on Solana, a distinct structure emerges, comprising two separate accounts: a data account and a program account. The program account stores the contract's executable binary and controls the data account, which encompasses all storage variables. This contrasts with Ethereum's approach, where a single account manages both executable code and data.\n\nSimplifying Technical Concepts in Solana and Ethereum\n\n- In Solana, an account is represented by a 32-byte key, denoted as the **`address`** type, which differs from Ethereum's 20-byte address format. An address is represented using syntax like **`36VtvSbE6jVGGQytYWSaDPG7uZphaxEjpJHUUpuUbq4D`**.\n- It's important to note that Ethereum's address format **`0xE0f5206BBD039e7b0592d8918820024e2a7437b9`** isn't compatible with Solana.\n- Ethereum's wallet addresses generally have 40 characters, including the 0x prefix. , Solana wallet addresses can be around 44 characters in length, without a fixed prefix.\n- The use of Solana's target requires **[Solana](https://www.solana.com/)** version v1.8.1.\n- In Ethereum, setting the gas limit while invoking a smart contract function influences resource consumption. Gas encompasses the on-chain execution expenses and permits the prioritization of execution through the allocation of extra gas. Each instruction within the Ethereum Virtual Machine (EVM) carries a unique gas value, which corresponds to real ETH costs.\n- In Solana, the focus is on reducing delays and increasing transaction processing speed. To achieve this, Solana uses compute units similar to Ethereum's gas. Each smart contract function in Solana is allocated the same number of compute units (currently 200k), and every instruction of a contract consumes exactly one compute unit. Unlike Ethereum, Solana transactions do not require the specification of compute units and are not charged for their usage. However, the charges for execution priority are based on the consumed compute units. Therefore, the concepts of gas in Ethereum do not apply to Solidity on Solana.\n- The **`msg.sender`** function isn't available in Solana.\n- Due to different signature algorithms, Solana lacks the **`ecrecover()`** function. Yet, **`signatureVerify()`** verifies ed25519 signatures. Extracting a signer from a signature isn't workable.\n- On Solana, try-catch statements lack functionality. If a call or contract creation fails, the runtime stops execution and reverts the transaction.\n- Error definitions, reverts, and error messages don't work in Solana.\n- The ERC-20 interface isn't currently compatible with Solana.\n\nHere's a simplified comparison table between Solana and Ethereum various technical incompatibilities:\n\n| Concept | Solana | Ethereum |\n| --- | --- | --- |\n| Account Address Format | 32-byte key (address type) | 20-byte address |\n| Wallet Address Length | Varies (around 44 characters) | 40 characters (with 0x prefix) |\n| Required Solana Version | v1.8.1 | - |\n| Gas and Resource Management | Compute Units (similar to gas) | Gas and EVM instructions |\n| Compute Unit Allocation | 200k per function | Varies per instruction |\n| msg.sender Function | Not Available | Available |\n| Signature Verification | signatureVerify() | ecrecover() |\n| Try-Catch Statements | Not Functional | Available |\n| Error Handling and Reverts | Limited | Available |\n| ERC-20 Compatibility | Not Compatible | Compatible |\n\nIn the next lesson, we provide an in-depth technical comparison between Solana and Ethereum, especially with regards to their architectures and their use of Solidity.",
    "code": "var Component=(()=>{var un=Object.create;var j=Object.defineProperty;var dn=Object.getOwnPropertyDescriptor;var cn=Object.getOwnPropertyNames;var fn=Object.getPrototypeOf,mn=Object.prototype.hasOwnProperty;var B=(d,a)=>()=>(a||d((a={exports:{}}).exports,a),a.exports),hn=(d,a)=>{for(var p in a)j(d,p,{get:a[p],enumerable:!0})},ye=(d,a,p,S)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let g of cn(a))!mn.call(d,g)&&g!==p&&j(d,g,{get:()=>a[g],enumerable:!(S=dn(a,g))||S.enumerable});return d};var bn=(d,a,p)=>(p=d!=null?un(fn(d)):{},ye(a||!d||!d.__esModule?j(p,\"default\",{value:d,enumerable:!0}):p,d)),pn=d=>ye(j({},\"__esModule\",{value:!0}),d);var Ne=B((xn,xe)=>{xe.exports=React});var Ee=B(H=>{\"use strict\";(function(){\"use strict\";var d=Ne(),a=Symbol.for(\"react.element\"),p=Symbol.for(\"react.portal\"),S=Symbol.for(\"react.fragment\"),g=Symbol.for(\"react.strict_mode\"),z=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),D=Symbol.for(\"react.forward_ref\"),A=Symbol.for(\"react.suspense\"),F=Symbol.for(\"react.suspense_list\"),w=Symbol.for(\"react.memo\"),I=Symbol.for(\"react.lazy\"),we=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Te=\"@@iterator\";function Ce(e){if(e===null||typeof e!=\"object\")return null;var n=J&&e[J]||e[Te];return typeof n==\"function\"?n:null}var x=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];Ue(\"error\",e,r)}}function Ue(e,n,r){{var i=x.ReactDebugCurrentFrame,l=i.getStackAddendum();l!==\"\"&&(n+=\"%s\",r=r.concat([l]));var u=r.map(function(s){return String(s)});u.unshift(\"Warning: \"+n),Function.prototype.apply.call(console[e],console,u)}}var Oe=!1,Pe=!1,je=!1,Ae=!1,Fe=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ie(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===S||e===z||Fe||e===g||e===A||e===F||Ae||e===we||Oe||Pe||je||typeof e==\"object\"&&e!==null&&(e.$$typeof===I||e.$$typeof===w||e.$$typeof===X||e.$$typeof===K||e.$$typeof===D||e.$$typeof===Z||e.getModuleId!==void 0))}function Ve(e,n,r){var i=e.displayName;if(i)return i;var l=n.displayName||n.name||\"\";return l!==\"\"?r+\"(\"+l+\")\":r}function Q(e){return e.displayName||\"Context\"}function v(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case S:return\"Fragment\";case p:return\"Portal\";case z:return\"Profiler\";case g:return\"StrictMode\";case A:return\"Suspense\";case F:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var n=e;return Q(n)+\".Consumer\";case X:var r=e;return Q(r._context)+\".Provider\";case D:return Ve(e,e.render,\"ForwardRef\");case w:var i=e.displayName||null;return i!==null?i:v(e.type)||\"Memo\";case I:{var l=e,u=l._payload,s=l._init;try{return v(s(u))}catch{return null}}}return null}var y=Object.assign,k=0,ee,ne,re,ae,te,ie,oe;function se(){}se.__reactDisabledLog=!0;function We(){{if(k===0){ee=console.log,ne=console.info,re=console.warn,ae=console.error,te=console.group,ie=console.groupCollapsed,oe=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}k++}}function Ye(){{if(k--,k===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:y({},e,{value:ee}),info:y({},e,{value:ne}),warn:y({},e,{value:re}),error:y({},e,{value:ae}),group:y({},e,{value:te}),groupCollapsed:y({},e,{value:ie}),groupEnd:y({},e,{value:oe})})}k<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var V=x.ReactCurrentDispatcher,W;function T(e,n,r){{if(W===void 0)try{throw Error()}catch(l){var i=l.stack.trim().match(/\\n( *(at )?)/);W=i&&i[1]||\"\"}return`\n`+W+e}}var Y=!1,C;{var Me=typeof WeakMap==\"function\"?WeakMap:Map;C=new Me}function le(e,n){if(!e||Y)return\"\";{var r=C.get(e);if(r!==void 0)return r}var i;Y=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var u;u=V.current,V.current=null,We();try{if(n){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(_){i=_}Reflect.construct(e,[],s)}else{try{s.call()}catch(_){i=_}e.call(s.prototype)}}else{try{throw Error()}catch(_){i=_}e()}}catch(_){if(_&&i&&typeof _.stack==\"string\"){for(var o=_.stack.split(`\n`),h=i.stack.split(`\n`),c=o.length-1,f=h.length-1;c>=1&&f>=0&&o[c]!==h[f];)f--;for(;c>=1&&f>=0;c--,f--)if(o[c]!==h[f]){if(c!==1||f!==1)do if(c--,f--,f<0||o[c]!==h[f]){var b=`\n`+o[c].replace(\" at new \",\" at \");return e.displayName&&b.includes(\"<anonymous>\")&&(b=b.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&C.set(e,b),b}while(c>=1&&f>=0);break}}}finally{Y=!1,V.current=u,Ye(),Error.prepareStackTrace=l}var E=e?e.displayName||e.name:\"\",Se=E?T(E):\"\";return typeof e==\"function\"&&C.set(e,Se),Se}function $e(e,n,r){return le(e,!1)}function Le(e){var n=e.prototype;return!!(n&&n.isReactComponent)}function U(e,n,r){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Le(e));if(typeof e==\"string\")return T(e);switch(e){case A:return T(\"Suspense\");case F:return T(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case D:return $e(e.render);case w:return U(e.type,n,r);case I:{var i=e,l=i._payload,u=i._init;try{return U(u(l),n,r)}catch{}}}return\"\"}var O=Object.prototype.hasOwnProperty,ue={},de=x.ReactDebugCurrentFrame;function P(e){if(e){var n=e._owner,r=U(e.type,e._source,n?n.type:null);de.setExtraStackFrame(r)}else de.setExtraStackFrame(null)}function Ge(e,n,r,i,l){{var u=Function.call.bind(O);for(var s in e)if(u(e,s)){var o=void 0;try{if(typeof e[s]!=\"function\"){var h=Error((i||\"React class\")+\": \"+r+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}o=e[s](n,s,i,r,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(c){o=c}o&&!(o instanceof Error)&&(P(l),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",r,s,typeof o),P(null)),o instanceof Error&&!(o.message in ue)&&(ue[o.message]=!0,P(l),m(\"Failed %s type: %s\",r,o.message),P(null))}}}var qe=Array.isArray;function M(e){return qe(e)}function Be(e){{var n=typeof Symbol==\"function\"&&Symbol.toStringTag,r=n&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return r}}function He(e){try{return ce(e),!1}catch{return!0}}function ce(e){return\"\"+e}function fe(e){if(He(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Be(e)),ce(e)}var R=x.ReactCurrentOwner,ze={key:!0,ref:!0,__self:!0,__source:!0},me,he,$;$={};function Xe(e){if(O.call(e,\"ref\")){var n=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(n&&n.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(O.call(e,\"key\")){var n=Object.getOwnPropertyDescriptor(e,\"key\").get;if(n&&n.isReactWarning)return!1}return e.key!==void 0}function Je(e,n){if(typeof e.ref==\"string\"&&R.current&&n&&R.current.stateNode!==n){var r=v(R.current.type);$[r]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',v(R.current.type),e.ref),$[r]=!0)}}function Ze(e,n){{var r=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:r,configurable:!0})}}function Qe(e,n){{var r=function(){he||(he=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:r,configurable:!0})}}var en=function(e,n,r,i,l,u,s){var o={$$typeof:a,type:e,key:n,ref:r,props:s,_owner:u};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:l}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function nn(e,n,r,i,l){{var u,s={},o=null,h=null;r!==void 0&&(fe(r),o=\"\"+r),Ke(n)&&(fe(n.key),o=\"\"+n.key),Xe(n)&&(h=n.ref,Je(n,l));for(u in n)O.call(n,u)&&!ze.hasOwnProperty(u)&&(s[u]=n[u]);if(e&&e.defaultProps){var c=e.defaultProps;for(u in c)s[u]===void 0&&(s[u]=c[u])}if(o||h){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Ze(s,f),h&&Qe(s,f)}return en(e,o,h,l,i,R.current,s)}}var L=x.ReactCurrentOwner,be=x.ReactDebugCurrentFrame;function N(e){if(e){var n=e._owner,r=U(e.type,e._source,n?n.type:null);be.setExtraStackFrame(r)}else be.setExtraStackFrame(null)}var G;G=!1;function q(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===a}function pe(){{if(L.current){var e=v(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function rn(e){{if(e!==void 0){var n=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),r=e.lineNumber;return`\n\nCheck your code at `+n+\":\"+r+\".\"}return\"\"}}var ve={};function an(e){{var n=pe();if(!n){var r=typeof e==\"string\"?e:e.displayName||e.name;r&&(n=`\n\nCheck the top-level render call using <`+r+\">.\")}return n}}function _e(e,n){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var r=an(n);if(ve[r])return;ve[r]=!0;var i=\"\";e&&e._owner&&e._owner!==L.current&&(i=\" It was passed a child from \"+v(e._owner.type)+\".\"),N(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',r,i),N(null)}}function ge(e,n){{if(typeof e!=\"object\")return;if(M(e))for(var r=0;r<e.length;r++){var i=e[r];q(i)&&_e(i,n)}else if(q(e))e._store&&(e._store.validated=!0);else if(e){var l=Ce(e);if(typeof l==\"function\"&&l!==e.entries)for(var u=l.call(e),s;!(s=u.next()).done;)q(s.value)&&_e(s.value,n)}}}function tn(e){{var n=e.type;if(n==null||typeof n==\"string\")return;var r;if(typeof n==\"function\")r=n.propTypes;else if(typeof n==\"object\"&&(n.$$typeof===D||n.$$typeof===w))r=n.propTypes;else return;if(r){var i=v(n);Ge(r,e.props,\"prop\",i,e)}else if(n.PropTypes!==void 0&&!G){G=!0;var l=v(n);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",l||\"Unknown\")}typeof n.getDefaultProps==\"function\"&&!n.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function on(e){{for(var n=Object.keys(e.props),r=0;r<n.length;r++){var i=n[r];if(i!==\"children\"&&i!==\"key\"){N(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),N(null);break}}e.ref!==null&&(N(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),N(null))}}function sn(e,n,r,i,l,u){{var s=Ie(e);if(!s){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=rn(l);h?o+=h:o+=pe();var c;e===null?c=\"null\":M(e)?c=\"array\":e!==void 0&&e.$$typeof===a?(c=\"<\"+(v(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):c=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",c,o)}var f=nn(e,n,r,l,u);if(f==null)return f;if(s){var b=n.children;if(b!==void 0)if(i)if(M(b)){for(var E=0;E<b.length;E++)ge(b[E],e);Object.freeze&&Object.freeze(b)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(b,e)}return e===S?on(f):tn(f),f}}var ln=sn;H.Fragment=S,H.jsxDEV=ln})()});var Re=B((En,ke)=>{\"use strict\";ke.exports=Ee()});var Sn={};hn(Sn,{default:()=>gn,frontmatter:()=>vn});var t=bn(Re()),vn={title:\"Intro to solana\",author:\"shivam\",moduleNumber:\"module-1\",modulePart:\"module-1-a\",thisFileName:\"solidity-for-solvseth\"};function De(d){let a=Object.assign({h1:\"h1\",p:\"p\",ul:\"ul\",li:\"li\",h2:\"h2\",strong:\"strong\",code:\"code\",a:\"a\"},d.components);return(0,t.jsxDEV)(t.Fragment,{children:[(0,t.jsxDEV)(a.h1,{children:\"Solidity For Solana vs. Solidity For Ethereum\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:9,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h1,{children:\"Objectives\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"In this lesson, you will able to:\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.ul,{children:[`\n`,(0,t.jsxDEV)(a.li,{children:\"Explain the adjustments for Solidity on Solana.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"Understand the technical differences between Ethereum and Solana.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:16,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h1,{children:\"tl;dr\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:18,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"In this lesson, we take a brief look at the differences in the development environments of Solana and Ethereum. In Solidity contracts on Solana, there are two accounts: a program account for the executable code and a data account for storage variables, different from Ethereum's single-account approach where one account handles both code and data.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h1,{children:\"Overview\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:22,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.h2,{children:\"Adapting Solidity for Solana's Unique Environment\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:24,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:[(0,t.jsxDEV)(a.strong,{children:\"When integrating Solidity's mechanics into the Solana environment, certain adjustments are necessary\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:26,columnNumber:1},this),\". Within a Solidity contract on Solana, a distinct structure emerges, comprising two separate accounts: a data account and a program account. The program account stores the contract's executable binary and controls the data account, which encompasses all storage variables. This contrasts with Ethereum's approach, where a single account manages both executable code and data.\"]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:26,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"Simplifying Technical Concepts in Solana and Ethereum\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:28,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.ul,{children:[`\n`,(0,t.jsxDEV)(a.li,{children:[\"In Solana, an account is represented by a 32-byte key, denoted as the\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"address\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:30,columnNumber:75},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:30,columnNumber:73},this),\"\\xA0type, which differs from Ethereum's 20-byte address format. An address is represented using syntax like\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"36VtvSbE6jVGGQytYWSaDPG7uZphaxEjpJHUUpuUbq4D\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:30,columnNumber:193},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:30,columnNumber:191},this),\".\"]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"It's important to note that Ethereum's address format\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"0xE0f5206BBD039e7b0592d8918820024e2a7437b9\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:31,columnNumber:59},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:31,columnNumber:57},this),\"\\xA0isn't compatible with Solana.\"]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"Ethereum's wallet addresses generally have 40 characters, including the 0x prefix. , Solana wallet addresses can be around 44 characters in length, without a fixed prefix.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:32,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"The use of Solana's target requires\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.a,{href:\"https://www.solana.com/\",children:\"Solana\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:33,columnNumber:41},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:33,columnNumber:39},this),\"\\xA0version v1.8.1.\"]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"In Ethereum, setting the gas limit while invoking a smart contract function influences resource consumption. Gas encompasses the on-chain execution expenses and permits the prioritization of execution through the allocation of extra gas. Each instruction within the Ethereum Virtual Machine (EVM) carries a unique gas value, which corresponds to real ETH costs.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:34,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"In Solana, the focus is on reducing delays and increasing transaction processing speed. To achieve this, Solana uses compute units similar to Ethereum's gas. Each smart contract function in Solana is allocated the same number of compute units (currently 200k), and every instruction of a contract consumes exactly one compute unit. Unlike Ethereum, Solana transactions do not require the specification of compute units and are not charged for their usage. However, the charges for execution priority are based on the consumed compute units. Therefore, the concepts of gas in Ethereum do not apply to Solidity on Solana.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"The\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"msg.sender\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:36,columnNumber:9},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:36,columnNumber:7},this),\"\\xA0function isn't available in Solana.\"]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:36,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:[\"Due to different signature algorithms, Solana lacks the\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"ecrecover()\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:37,columnNumber:61},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:37,columnNumber:59},this),\"\\xA0function. Yet,\\xA0\",(0,t.jsxDEV)(a.strong,{children:(0,t.jsxDEV)(a.code,{children:\"signatureVerify()\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:37,columnNumber:94},this)},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:37,columnNumber:92},this),\"\\xA0verifies ed25519 signatures. Extracting a signer from a signature isn't workable.\"]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"On Solana, try-catch statements lack functionality. If a call or contract creation fails, the runtime stops execution and reverts the transaction.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"Error definitions, reverts, and error messages don't work in Solana.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.li,{children:\"The ERC-20 interface isn't currently compatible with Solana.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:40,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"Here's a simplified comparison table between Solana and Ethereum various technical incompatibilities:\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:42,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:`| Concept | Solana | Ethereum |\n| --- | --- | --- |\n| Account Address Format | 32-byte key (address type) | 20-byte address |\n| Wallet Address Length | Varies (around 44 characters) | 40 characters (with 0x prefix) |\n| Required Solana Version | v1.8.1 | - |\n| Gas and Resource Management | Compute Units (similar to gas) | Gas and EVM instructions |\n| Compute Unit Allocation | 200k per function | Varies per instruction |\n| msg.sender\\xA0Function | Not Available | Available |\n| Signature Verification | signatureVerify() | ecrecover() |\n| Try-Catch Statements | Not Functional | Available |\n| Error Handling and Reverts | Limited | Available |\n| ERC-20 Compatibility | Not Compatible | Compatible |`},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,t.jsxDEV)(a.p,{children:\"In the next lesson, we provide an in-depth technical comparison between Solana and Ethereum, especially with regards to their architectures and their use of Solidity.\"},void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:57,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\",lineNumber:1,columnNumber:1},this)}function _n(d={}){let{wrapper:a}=d.components||{};return a?(0,t.jsxDEV)(a,Object.assign({},d,{children:(0,t.jsxDEV)(De,d,void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\"},this)}),void 0,!1,{fileName:\"/Users/shivamsoni/Desktop/Solang-Series/modules/module-1/module-1-a/_mdx_bundler_entry_point-cc30d8a7-14a6-483c-bc24-fe63f8ffdad0.mdx\"},this):De(d)}var gn=_n;return pn(Sn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
>>>>>>> 1b1a412 (content layer)
  },
  "_id": "module-1/module-1-a/solidity-for-solvseth.mdx",
  "_raw": {
    "sourceFilePath": "module-1/module-1-a/solidity-for-solvseth.mdx",
    "sourceFileName": "solidity-for-solvseth.mdx",
    "sourceFileDir": "module-1/module-1-a",
    "contentType": "mdx",
    "flattenedPath": "module-1/module-1-a/solidity-for-solvseth"
  },
  "type": "Doc",
  "slug": "/module-1/module-1-a/solidity-for-solvseth",
  "slugAsParams": "module-1-a/solidity-for-solvseth",
  "headings": [
    {
      "level": 1,
      "text": "Solidity For Solana vs. Solidity For Ethereum",
      "slug": "solidity-for-solana-vs-solidity-for-ethereum"
    },
    {
      "level": 1,
      "text": "Objectives",
      "slug": "objectives"
    },
    {
      "level": 1,
      "text": "tl;dr",
      "slug": "tldr"
    },
    {
      "level": 1,
      "text": "Overview",
      "slug": "overview"
    },
    {
      "level": 2,
      "text": "Adapting Solidity for Solana's Unique Environment",
      "slug": "adapting-solidity-for-solanas-unique-environment"
    }
  ]
}